const express = require('express');
const { supabase, supabaseAdmin, safeQuery } = require('../config/supabase');
const router = express.Router();

// Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
router.get('/connection', async (req, res) => {
  try {
    console.log('üîç Supabase Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ ÏãúÏûë...');
    
    // Í∞êÏ†ï ÌÖåÏù¥Î∏îÏóêÏÑú Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå
    const { data, error } = await supabase
      .from('emotions')
      .select('*')
      .limit(5);
    
    if (error) {
      console.error('‚ùå Supabase ÏøºÎ¶¨ Ïò§Î•ò:', error);
      return res.status(500).json({
        success: false,
        message: 'Supabase Ïó∞Í≤∞ Ïã§Ìå®',
        error: error.message
      });
    }
    
    console.log('‚úÖ Supabase Ïó∞Í≤∞ ÏÑ±Í≥µ, Îç∞Ïù¥ÌÑ∞:', data);
    
    res.json({
      success: true,
      message: 'Supabase Ïó∞Í≤∞ ÏÑ±Í≥µ!',
      data: data,
      count: data.length
    });
    
  } catch (error) {
    console.error('‚ùå Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ Ï§ë ÏòàÏô∏:', error);
    res.status(500).json({
      success: false,
      message: 'Ïó∞Í≤∞ ÌÖåÏä§Ìä∏ Ïã§Ìå®',
      error: error.message
    });
  }
});

// ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå
router.get('/tables', async (req, res) => {
  try {
    console.log('üìã ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå ÏãúÏûë...');
    
    const { data, error } = await supabaseAdmin
      .from('information_schema.tables')
      .select('table_name')
      .eq('table_schema', 'public')
      .order('table_name');
    
    if (error) {
      console.error('‚ùå ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå Ïò§Î•ò:', error);
      return res.status(500).json({
        success: false,
        message: 'ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå Ïã§Ìå®',
        error: error.message
      });
    }
    
    console.log('‚úÖ ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå ÏÑ±Í≥µ:', data);
    
    res.json({
      success: true,
      message: 'ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå ÏÑ±Í≥µ',
      tables: data.map(t => t.table_name)
    });
    
  } catch (error) {
    console.error('‚ùå ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå Ï§ë ÏòàÏô∏:', error);
    res.status(500).json({
      success: false,
      message: 'ÌÖåÏù¥Î∏î Î™©Î°ù Ï°∞Ìöå Ïã§Ìå®',
      error: error.message
    });
  }
});

// Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ ÌÖåÏä§Ìä∏
router.get('/emotions', async (req, res) => {
  try {
    console.log('üòä Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÏãúÏûë...');
    
    const result = await safeQuery(async () => {
      return await supabase
        .from('emotions')
        .select('*')
        .order('name');
    }, 'Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå');
    
    if (!result.success) {
      return res.status(result.error.code).json({
        success: false,
        message: result.error.message
      });
    }
    
    console.log('‚úÖ Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÏÑ±Í≥µ:', result.data.length + 'Í∞ú');
    
    res.json({
      success: true,
      message: 'Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÏÑ±Í≥µ',
      data: result.data,
      count: result.data.length
    });
    
  } catch (error) {
    console.error('‚ùå Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ï§ë ÏòàÏô∏:', error);
    res.status(500).json({
      success: false,
      message: 'Í∞êÏ†ï Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå Ïã§Ìå®',
      error: error.message
    });
  }
});

// ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± ÌÖåÏä§Ìä∏ (ÌÖåÏä§Ìä∏Ïö©)
router.post('/test-user', async (req, res) => {
  try {
    console.log('üë§ ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± ÏãúÏûë...');
    
    const testUser = {
      username: 'test_user_' + Date.now(),
      email: 'test' + Date.now() + '@example.com',
      name: 'ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê',
      role: 'user'
    };
    
    const result = await safeQuery(async () => {
      return await supabase
        .from('users')
        .insert(testUser)
        .select()
        .single();
    }, 'ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ±');
    
    if (!result.success) {
      return res.status(result.error.code).json({
        success: false,
        message: result.error.message
      });
    }
    
    console.log('‚úÖ ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± ÏÑ±Í≥µ:', result.data.id);
    
    res.json({
      success: true,
      message: 'ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± ÏÑ±Í≥µ',
      user: {
        id: result.data.id,
        username: result.data.username,
        email: result.data.email,
        name: result.data.name
      }
    });
    
  } catch (error) {
    console.error('‚ùå ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± Ï§ë ÏòàÏô∏:', error);
    res.status(500).json({
      success: false,
      message: 'ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ± Ïã§Ìå®',
      error: error.message
    });
  }
});

// ÌôòÍ≤Ω Î≥ÄÏàò ÌôïÏù∏
router.get('/config', (req, res) => {
  res.json({
    success: true,
    message: 'Supabase ÏÑ§Ï†ï ÌôïÏù∏',
    config: {
      hasSupabaseUrl: !!process.env.SUPABASE_URL,
      hasAnonKey: !!process.env.SUPABASE_ANON_KEY,
      hasServiceKey: !!process.env.SUPABASE_SERVICE_ROLE_KEY,
      supabaseUrl: process.env.SUPABASE_URL ? 
        process.env.SUPABASE_URL.replace(/https:\/\/(.{8}).*/, 'https://$1...') : 
        'Not set'
    }
  });
});

module.exports = router;