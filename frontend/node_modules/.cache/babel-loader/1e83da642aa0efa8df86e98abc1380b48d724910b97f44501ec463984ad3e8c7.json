{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // 쿠키 전송을 위해 필요\n});\n\n// 요청 인터셉터 - 모든 요청에 토큰 추가\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 응답 인터셉터 - 401 오류 시 토큰 제거 및 로그아웃 처리\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  console.error('API Error:', error);\n\n  // 401 오류 시 토큰 제거\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    // 로그인 페이지로 리다이렉트 (선택사항)\n    // window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// 인증 API\nexport const authAPI = {\n  // 회원가입\n  register: data => api.post('/auth/register', data),\n  // 로그인\n  login: data => api.post('/auth/login', data),\n  // 로그아웃\n  logout: () => api.post('/auth/logout'),\n  // 현재 사용자 정보 조회\n  getMe: () => api.get('/auth/me'),\n  // 프로필 수정\n  updateProfile: data => api.put('/auth/profile', data),\n  // 비밀번호 변경\n  changePassword: data => api.put('/auth/password', data)\n};\n\n// 대본 API\nexport const scriptAPI = {\n  // 모든 대본 조회\n  getAll: (params = {}) => api.get('/scripts', {\n    params\n  }),\n  // 인기 대본 조회\n  getPopular: () => api.get('/scripts/popular'),\n  // 최신 대본 조회\n  getLatest: () => api.get('/scripts/latest'),\n  // 특정 대본 조회\n  getById: id => api.get(`/scripts/${id}`),\n  // 조회수 증가\n  incrementView: id => api.patch(`/scripts/${id}/view`),\n  // 대본 생성\n  create: data => api.post('/scripts', data),\n  // 대본 수정\n  update: (id, data) => api.put(`/scripts/${id}`, data),\n  // 대본 삭제\n  delete: id => api.delete(`/scripts/${id}`)\n};\n\n// 감정 API\nexport const emotionAPI = {\n  // 모든 감정 조회\n  getAll: () => api.get('/emotions'),\n  // 특정 감정 조회\n  getById: id => api.get(`/emotions/${id}`),\n  // 감정 생성\n  create: data => api.post('/emotions', data),\n  // 감정 수정\n  update: (id, data) => api.put(`/emotions/${id}`, data),\n  // 감정 삭제\n  delete: id => api.delete(`/emotions/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","console","status","removeItem","authAPI","register","data","post","login","logout","getMe","get","updateProfile","put","changePassword","scriptAPI","getAll","params","getPopular","getLatest","getById","id","incrementView","patch","update","delete","emotionAPI"],"sources":["D:/carcor/인터넷 쇼핑/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // 쿠키 전송을 위해 필요\r\n});\r\n\r\n// 요청 인터셉터 - 모든 요청에 토큰 추가\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터 - 401 오류 시 토큰 제거 및 로그아웃 처리\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    // 401 오류 시 토큰 제거\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      // 로그인 페이지로 리다이렉트 (선택사항)\r\n      // window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 인증 API\r\nexport const authAPI = {\r\n  // 회원가입\r\n  register: (data) => api.post('/auth/register', data),\r\n  \r\n  // 로그인\r\n  login: (data) => api.post('/auth/login', data),\r\n  \r\n  // 로그아웃\r\n  logout: () => api.post('/auth/logout'),\r\n  \r\n  // 현재 사용자 정보 조회\r\n  getMe: () => api.get('/auth/me'),\r\n  \r\n  // 프로필 수정\r\n  updateProfile: (data) => api.put('/auth/profile', data),\r\n  \r\n  // 비밀번호 변경\r\n  changePassword: (data) => api.put('/auth/password', data),\r\n};\r\n\r\n// 대본 API\r\nexport const scriptAPI = {\r\n  // 모든 대본 조회\r\n  getAll: (params = {}) => api.get('/scripts', { params }),\r\n  \r\n  // 인기 대본 조회\r\n  getPopular: () => api.get('/scripts/popular'),\r\n  \r\n  // 최신 대본 조회\r\n  getLatest: () => api.get('/scripts/latest'),\r\n  \r\n  // 특정 대본 조회\r\n  getById: (id) => api.get(`/scripts/${id}`),\r\n  \r\n  // 조회수 증가\r\n  incrementView: (id) => api.patch(`/scripts/${id}/view`),\r\n  \r\n  // 대본 생성\r\n  create: (data) => api.post('/scripts', data),\r\n  \r\n  // 대본 수정\r\n  update: (id, data) => api.put(`/scripts/${id}`, data),\r\n  \r\n  // 대본 삭제\r\n  delete: (id) => api.delete(`/scripts/${id}`),\r\n};\r\n\r\n// 감정 API\r\nexport const emotionAPI = {\r\n  // 모든 감정 조회\r\n  getAll: () => api.get('/emotions'),\r\n  \r\n  // 특정 감정 조회\r\n  getById: (id) => api.get(`/emotions/${id}`),\r\n  \r\n  // 감정 생성\r\n  create: (data) => api.post('/emotions', data),\r\n  \r\n  // 감정 수정\r\n  update: (id, data) => api.put(`/emotions/${id}`, data),\r\n  \r\n  // 감정 삭제\r\n  delete: (id) => api.delete(`/emotions/${id}`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}