{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';const api=axios.create({baseURL:API_BASE_URL,timeout:10000,headers:{'Content-Type':'application/json'},withCredentials:true// 쿠키 전송을 위해 필요\n});// 요청 인터셉터 - 모든 요청에 토큰 추가\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// 응답 인터셉터 - 401 오류 시 토큰 제거 및 로그아웃 처리\napi.interceptors.response.use(response=>{return response;},error=>{var _error$response;console.error('API Error:',error);// 401 오류 시 토큰 제거\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');// 로그인 페이지로 리다이렉트 (선택사항)\n// window.location.href = '/login';\n}return Promise.reject(error);});// 인증 API\nexport const authAPI={// 회원가입\nregister:data=>api.post('/auth/register',data),// 로그인\nlogin:data=>api.post('/auth/login',data),// 로그아웃\nlogout:()=>api.post('/auth/logout'),// 현재 사용자 정보 조회\ngetMe:()=>api.get('/auth/me'),// 프로필 수정\nupdateProfile:data=>api.put('/auth/profile',data),// 비밀번호 변경\nchangePassword:data=>api.put('/auth/password',data)};// 대본 API\nexport const scriptAPI={// 모든 대본 조회\ngetAll:function(){let params=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};return api.get('/scripts',{params});},// 인기 대본 조회\ngetPopular:()=>api.get('/scripts/popular'),// 최신 대본 조회\ngetLatest:()=>api.get('/scripts/latest'),// 특정 대본 조회\ngetById:id=>api.get(`/scripts/${id}`),// 조회수 증가\nincrementView:id=>api.patch(`/scripts/${id}/view`),// 대본 생성\ncreate:data=>api.post('/scripts',data),// 대본 수정\nupdate:(id,data)=>api.put(`/scripts/${id}`,data),// 대본 삭제\ndelete:id=>api.delete(`/scripts/${id}`)};// 감정 API\nexport const emotionAPI={// 모든 감정 조회\ngetAll:()=>api.get('/emotions'),// 특정 감정 조회\ngetById:id=>api.get(`/emotions/${id}`),// 감정 생성\ncreate:data=>api.post('/emotions',data),// 감정 수정\nupdate:(id,data)=>api.put(`/emotions/${id}`,data),// 감정 삭제\ndelete:id=>api.delete(`/emotions/${id}`)};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","withCredentials","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","console","status","removeItem","authAPI","register","data","post","login","logout","getMe","get","updateProfile","put","changePassword","scriptAPI","getAll","params","arguments","length","undefined","getPopular","getLatest","getById","id","incrementView","patch","update","delete","emotionAPI"],"sources":["D:/carcor/인터넷 쇼핑/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n  withCredentials: true, // 쿠키 전송을 위해 필요\r\n});\r\n\r\n// 요청 인터셉터 - 모든 요청에 토큰 추가\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터 - 401 오류 시 토큰 제거 및 로그아웃 처리\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    \r\n    // 401 오류 시 토큰 제거\r\n    if (error.response?.status === 401) {\r\n      localStorage.removeItem('token');\r\n      // 로그인 페이지로 리다이렉트 (선택사항)\r\n      // window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 인증 API\r\nexport const authAPI = {\r\n  // 회원가입\r\n  register: (data) => api.post('/auth/register', data),\r\n  \r\n  // 로그인\r\n  login: (data) => api.post('/auth/login', data),\r\n  \r\n  // 로그아웃\r\n  logout: () => api.post('/auth/logout'),\r\n  \r\n  // 현재 사용자 정보 조회\r\n  getMe: () => api.get('/auth/me'),\r\n  \r\n  // 프로필 수정\r\n  updateProfile: (data) => api.put('/auth/profile', data),\r\n  \r\n  // 비밀번호 변경\r\n  changePassword: (data) => api.put('/auth/password', data),\r\n};\r\n\r\n// 대본 API\r\nexport const scriptAPI = {\r\n  // 모든 대본 조회\r\n  getAll: (params = {}) => api.get('/scripts', { params }),\r\n  \r\n  // 인기 대본 조회\r\n  getPopular: () => api.get('/scripts/popular'),\r\n  \r\n  // 최신 대본 조회\r\n  getLatest: () => api.get('/scripts/latest'),\r\n  \r\n  // 특정 대본 조회\r\n  getById: (id) => api.get(`/scripts/${id}`),\r\n  \r\n  // 조회수 증가\r\n  incrementView: (id) => api.patch(`/scripts/${id}/view`),\r\n  \r\n  // 대본 생성\r\n  create: (data) => api.post('/scripts', data),\r\n  \r\n  // 대본 수정\r\n  update: (id, data) => api.put(`/scripts/${id}`, data),\r\n  \r\n  // 대본 삭제\r\n  delete: (id) => api.delete(`/scripts/${id}`),\r\n};\r\n\r\n// 감정 API\r\nexport const emotionAPI = {\r\n  // 모든 감정 조회\r\n  getAll: () => api.get('/emotions'),\r\n  \r\n  // 특정 감정 조회\r\n  getById: (id) => api.get(`/emotions/${id}`),\r\n  \r\n  // 감정 생성\r\n  create: (data) => api.post('/emotions', data),\r\n  \r\n  // 감정 수정\r\n  update: (id, data) => api.put(`/emotions/${id}`, data),\r\n  \r\n  // 감정 삭제\r\n  delete: (id) => api.delete(`/emotions/${id}`),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}