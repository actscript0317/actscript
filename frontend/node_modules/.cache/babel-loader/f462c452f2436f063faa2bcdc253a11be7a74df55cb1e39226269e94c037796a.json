{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 요청 인터셉터\napi.interceptors.request.use(config => {\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 응답 인터셉터\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('API Error:', error);\n  return Promise.reject(error);\n});\n\n// 대본 API\nexport const scriptAPI = {\n  // 모든 대본 조회\n  getAll: (params = {}) => api.get('/scripts', {\n    params\n  }),\n  // 인기 대본 조회\n  getPopular: () => api.get('/scripts/popular'),\n  // 최신 대본 조회\n  getLatest: () => api.get('/scripts/latest'),\n  // 특정 대본 조회\n  getById: id => api.get(`/scripts/${id}`),\n  // 대본 생성\n  create: data => api.post('/scripts', data),\n  // 대본 수정\n  update: (id, data) => api.put(`/scripts/${id}`, data),\n  // 대본 삭제\n  delete: id => api.delete(`/scripts/${id}`)\n};\n\n// 감정 API\nexport const emotionAPI = {\n  // 모든 감정 조회\n  getAll: () => api.get('/emotions'),\n  // 특정 감정 조회\n  getById: id => api.get(`/emotions/${id}`),\n  // 감정 생성\n  create: data => api.post('/emotions', data),\n  // 감정 수정\n  update: (id, data) => api.put(`/emotions/${id}`, data),\n  // 감정 삭제\n  delete: id => api.delete(`/emotions/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","console","scriptAPI","getAll","params","get","getPopular","getLatest","getById","id","data","post","update","put","delete","emotionAPI"],"sources":["D:/carcor/인터넷 쇼핑/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// 요청 인터셉터\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 응답 인터셉터\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// 대본 API\r\nexport const scriptAPI = {\r\n  // 모든 대본 조회\r\n  getAll: (params = {}) => api.get('/scripts', { params }),\r\n  \r\n  // 인기 대본 조회\r\n  getPopular: () => api.get('/scripts/popular'),\r\n  \r\n  // 최신 대본 조회\r\n  getLatest: () => api.get('/scripts/latest'),\r\n  \r\n  // 특정 대본 조회\r\n  getById: (id) => api.get(`/scripts/${id}`),\r\n  \r\n  // 대본 생성\r\n  create: (data) => api.post('/scripts', data),\r\n  \r\n  // 대본 수정\r\n  update: (id, data) => api.put(`/scripts/${id}`, data),\r\n  \r\n  // 대본 삭제\r\n  delete: (id) => api.delete(`/scripts/${id}`),\r\n};\r\n\r\n// 감정 API\r\nexport const emotionAPI = {\r\n  // 모든 감정 조회\r\n  getAll: () => api.get('/emotions'),\r\n  \r\n  // 특정 감정 조회\r\n  getById: (id) => api.get(`/emotions/${id}`),\r\n  \r\n  // 감정 생성\r\n  create: (data) => api.post('/emotions', data),\r\n  \r\n  // 감정 수정\r\n  update: (id, data) => api.put(`/emotions/${id}`, data),\r\n  \r\n  // 감정 삭제\r\n  delete: (id) => api.delete(`/emotions/${id}`),\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK;EACdC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAT,GAAG,CAACK,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTI,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAClC,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMK,SAAS,GAAG;EACvB;EACAC,MAAM,EAAEA,CAACC,MAAM,GAAG,CAAC,CAAC,KAAKhB,GAAG,CAACiB,GAAG,CAAC,UAAU,EAAE;IAAED;EAAO,CAAC,CAAC;EAExD;EACAE,UAAU,EAAEA,CAAA,KAAMlB,GAAG,CAACiB,GAAG,CAAC,kBAAkB,CAAC;EAE7C;EACAE,SAAS,EAAEA,CAAA,KAAMnB,GAAG,CAACiB,GAAG,CAAC,iBAAiB,CAAC;EAE3C;EACAG,OAAO,EAAGC,EAAE,IAAKrB,GAAG,CAACiB,GAAG,CAAC,YAAYI,EAAE,EAAE,CAAC;EAE1C;EACApB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,UAAU,EAAED,IAAI,CAAC;EAE5C;EACAE,MAAM,EAAEA,CAACH,EAAE,EAAEC,IAAI,KAAKtB,GAAG,CAACyB,GAAG,CAAC,YAAYJ,EAAE,EAAE,EAAEC,IAAI,CAAC;EAErD;EACAI,MAAM,EAAGL,EAAE,IAAKrB,GAAG,CAAC0B,MAAM,CAAC,YAAYL,EAAE,EAAE;AAC7C,CAAC;;AAED;AACA,OAAO,MAAMM,UAAU,GAAG;EACxB;EACAZ,MAAM,EAAEA,CAAA,KAAMf,GAAG,CAACiB,GAAG,CAAC,WAAW,CAAC;EAElC;EACAG,OAAO,EAAGC,EAAE,IAAKrB,GAAG,CAACiB,GAAG,CAAC,aAAaI,EAAE,EAAE,CAAC;EAE3C;EACApB,MAAM,EAAGqB,IAAI,IAAKtB,GAAG,CAACuB,IAAI,CAAC,WAAW,EAAED,IAAI,CAAC;EAE7C;EACAE,MAAM,EAAEA,CAACH,EAAE,EAAEC,IAAI,KAAKtB,GAAG,CAACyB,GAAG,CAAC,aAAaJ,EAAE,EAAE,EAAEC,IAAI,CAAC;EAEtD;EACAI,MAAM,EAAGL,EAAE,IAAKrB,GAAG,CAAC0B,MAAM,CAAC,aAAaL,EAAE,EAAE;AAC9C,CAAC;AAED,eAAerB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}